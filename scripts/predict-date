#!/usr/bin/env python3.7

import pandas as pd
from argparse import ArgumentParser
import datetime
from mongoengine import connect
import pickle

from devel_ball.analysis import predict_from_model


if __name__ == '__main__':

    connect('devel_ball')

    parser = ArgumentParser()
    parser.add_argument(
        "--date",
        default=None,
        help='The date to predict for, in format "year-month-day". Default of None means today will be used.',
    )
    # TODO: the year argument shouldn't be required, I can automatically detect year from date #
    parser.add_argument(
        '--data-pandas', default='predicting/predict.p', help='Name of pandas file with data to predict for.'
    )
    ###############################################################################################
    parser.add_argument(
        '--model', default='model.p', help='Name for the model to use for prediction'
    )
    args = parser.parse_args()

    # This script can probably be just made for future predictions
    data = pd.read_pickle('/Users/Jeremy/devel_ball/data/{}'.format(args.data_pandas))
    if type(data) == tuple:
        dk_players, data = data
    model_name = '/Users/Jeremy/devel_ball/models/{}'.format(args.model)
    model, data_pipeline = pickle.load(open(model_name, 'rb'))

    predictions = predict_from_model(model, data_pipeline, data, args.date)

    # Put below in a function elsewhere
    import IPython; IPython.embed()
