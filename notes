collecting stat utils

- go through advanced stats in models.py
- go through https://www.basketball-reference.com/about/glossary.html
- use this for verification https://www.basketball-reference.com/boxscores/201810160BOS.html
- go through https://bleacherreport.com/articles/1039116-understanding-the-nba-explaining-advanced-offensive-stats-and-metrics
- useful glossary https://stats.nba.com/help/glossary/#ast_ratio


stats to use

- advanced stats page
- POSS (under advanced stats, is the actual number of possessions players by the player or team.  For example, philly played 106 POSS and ben simmons played 85 POSS in 36.82 MIN of play in game 0021800001.  Probably want to turn this into POSS/MIN along with other basic per minute stats.

ideas

- best idea is to turn regular stats into stats/MIN, and then use that, and advanced metrics (that aren't dependent on minutes), to predict fantasy points per minute played.  Then, predict how many minutes a player plays in a game (can use news here too and injuries, etc.), and then multiple expected fantasy points per minute by expected minutes played.
- can also take stats as a function of stats/POSS (aka how many points/assists/fantasypoints do they expect per possession played), and then predict POSS (possessions played) based on historic data and also team pace, who they're playing against, etc.

notes on current work

db.getCollection('game').find({'player_games.203967': {$exists: true}}).sort({'date': 1})

1st define models and calculate team stats over the course of the season
2nd define models and calculate official stats over the course of the season
3rd calculate PlayerSeason because those stats will rely on having team/official stats



- Update PLAYER to have next games

bridges = endpoints.PlayerNextNGames(player_id='1628970')

In [8]: bridges.next_n_games.get_data_frame()
Out[8]:
       GAME_ID     GAME_DATE  HOME_TEAM_ID  VISITOR_TEAM_ID  ... VISITOR_TEAM_NICKNAME GAME_TIME HOME_WL VISITOR_WL
0   0022100281  NOV 26, 2021    1610612766       1610612750  ...          Timberwolves  07:00 PM    12-8        9-9
1   0022100297  NOV 27, 2021    1610612745       1610612766  ...               Hornets  08:00 PM    2-16       12-8
2   0022100307  NOV 29, 2021    1610612741       1610612766  ...               Hornets  08:00 PM    12-7       12-8
3   0022100324  DEC 01, 2021    1610612749       1610612766  ...               Hornets  08:00 PM    11-8       12-8
4   0022100350  DEC 05, 2021    1610612737       1610612766  ...               Hornets  06:00 PM    10-9       12-8
..         ...           ...           ...              ...  ...                   ...       ...     ...        ...
57  0022101161  APR 02, 2022    1610612755       1610612766  ...               Hornets  12:30 PM    10-9       12-8
58  0022101181  APR 05, 2022    1610612748       1610612766  ...               Hornets  07:30 PM    12-7       12-8
59  0022101196  APR 07, 2022    1610612766       1610612753  ...                 Magic  07:00 PM    12-8       4-15
60  0022101208  APR 08, 2022    1610612741       1610612766  ...               Hornets  08:00 PM    12-7       12-8
61  0022101217  APR 10, 2022    1610612766       1610612764  ...               Wizards      None    12-8       11-7

[62 rows x 13 columns]



from draft_kings import client, Sport

In [17]: for group in client.contests(sport=Sport.NBA)['groups']:
    ...:     print(group['id'])
    ...:     print(group['starts_at'].astimezone())
    ...:     print(group['games_count'])
    ...:     print()

idd = 60017

In [14]: for p in client.available_players(idd)['players']:
    ...:     print(p['id'])
    ...:     print(p['first_name'])
    ...:     print(p['last_name'])
    ...:     print(p['draft']['salary'])
    ...:     print()


Create 2 versions of pandas every day:
1) the current one which updates with past data up to this day, used for training
2) one for the next (X?) days using all players available in the season, and playerxnextgames

--- update player-season, team-season, official-season to also have a "current stats" which reflects the last stats in the season_stats, plus the updates from the game just played

- TODO !! - change the recent stats to check for recent games played not just last 10 times they were in a game
